class Solution {
    public int majorityElement(int[] nums) {
       // Brute_force

    //     for(int i=0;i<nums.length;i++)
    //     {
    //          int count=0;
    //     for(int j=0;j<nums.length;j++)
    //     {
    //         if(nums[j]==nums[i])
    //         {
    //             count++;
    //         }
    //     }
    //    if(count>(nums.length)/2)
    //    return nums[i];
    //     }
    //     return -1;

    //better

    // HashMap<Integer,Integer> count=new HashMap<>();
    // for(int num:nums)
    // {
    //     count.put(num,count.getOrDefault(num,0)+1);
   
    // }
    // int n=nums.length;
    // for(int num:nums)
    // {
    //     if(count.get(num)>n/2)
    //     return num;
    // }
    // return -1;

    //Optimal

      int count=0;
      int el=nums[0];
      for(int i=0;i<nums.length;i++)
      {
          if(count==0)
          {
             count=1;
             el=nums[i];
          }
          else if(nums[i] == el){
             count++;
          }
          else{
              count--;
          }
      }
      int count1=0;
      for(int i=0;i<nums.length;i++)
      {
          if(nums[i]==el)
          {
              count1++;
          }
      }
      if(count1>(nums.length/2))
      {
      return el;
      }
      return -1;


    }
}
